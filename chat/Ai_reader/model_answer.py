"""
The module prepares answers to user questions
"""
from langchain_community.llms import HuggingFaceHub
from langchain.chains.question_answering import load_qa_chain

from transformers.utils import logging
import pickle
from pdf.models import UploadedFile

logging.set_verbosity_error


def gen_text(context: str, question: str) -> str:
    """
    The procedure generates an answer to the question based on the received context

    :param context: context
    :type context: String
    :param question: question
    :type question: String
    """
    repo_id = "mistralai/Mixtral-8x7B-Instruct-v0.1"
    llm = HuggingFaceHub(
        repo_id=repo_id, model_kwargs={"temperature": 0.5, "max_length": 455}
    )

    chain = load_qa_chain(llm, chain_type="stuff")
    res = chain.run(input_documents=context, question=question)
    return res


def answer(filename: UploadedFile, question: str) -> str:
    """
    The procedure prepares a context based on the file and returns the response generated by the procedure gen_text()

    :param filename: The file on the basis of which the context is generated
    :type filename: UploadedFile
    :param question: question
    :type question: String
    """
    vector_store = pickle.load(filename.vector_db)


    context = vector_store.similarity_search(query=question, k=5)
    return gen_text(context, question)
